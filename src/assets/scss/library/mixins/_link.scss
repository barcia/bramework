// Mixin to styles in :hover and :focus pseudo-classes
@mixin hover-focus {
	&:hover,
	&:focus {
		@content;
	}
}



// Mixin to styles in :hover, :focus and :active pseudo-classes
@mixin hover-focus-active {
	&:hover,
	&:focus,
	&:active {
		@content;
	}
}



// Mixin to styles in :hover, :focus and :active pseudo-classes **and the element itself**
@mixin self-hover-focus-active {
	&,
	&:hover,
	&:focus,
	&:active {
		@content;
	}
}



@mixin focus-outline($width: 3px, $color: color(primary), $opacity: 60%) {
	box-shadow: 0 0 0 $width alpha($color, $opacity);
}


// Mixin to remove the link classes and its pseudo-classes
@mixin link-raw {
	@include self-hover-focus-active {
		text-decoration: none;
		color: inherit;
	}
}



// Mixin to add the styles to selector pseudo classes
@mixin link-states($property, $value1, $value2: $value1) {
	@include hover-focus {
		#{$property}: $value1;
	}

	&:active {
		#{$property}: $value2;
	}
}



// Mixin to create an animated underline effect when the text is hovered over
// Example: @include underline-animation(x, red, 2px, 0.3s);
@mixin underline-animation($axis, $color, $height, $time) {
	position: relative;
	display: inline-block;

	&::after {
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: $height;
		background-color: $color;
		content: "";
		transition: transform $time ease-out;
		transform-origin: bottom left;
		@if $axis == X or $axis == x {
			transform: scaleX(0);
		} @else {
			transform: scaleY(0);
		}
	}

	&:hover::after {
		@if $axis == X or $axis == x {
			transform: scaleX(1);
		} @else {
			transform: scaleY(1);
		}
	}
}
